package recursion.ctf.velocity;

import java.io.IOException;
import java.io.InputStream;
import java.net.URLDecoder;
import java.nio.charset.StandardCharsets;
import java.util.Scanner;

import org.apache.velocity.Template;
import org.apache.velocity.context.Context;
import org.apache.velocity.runtime.RuntimeServices;
import org.apache.velocity.runtime.RuntimeSingleton;
import org.apache.velocity.runtime.parser.node.SimpleNode;
import org.apache.velocity.tools.view.VelocityViewServlet;

import javax.servlet.ServletConfig;
import javax.servlet.ServletException;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

public class LoginServlet extends VelocityViewServlet {
    private static final String USERNAME = "admin";
    private static final String PASSWORD = "REDACTED";
    private String templateString;

    @Override
    public void init(ServletConfig config) throws ServletException {
        super.init(config);

        InputStream stream = getServletContext().getResourceAsStream("templates/login.vm");
        try (Scanner scanner = new Scanner(stream).useDelimiter("\\A")) {
            templateString = scanner.hasNext() ? scanner.next() : "";
        }
    }

    @Override
    protected Template handleRequest(HttpServletRequest request, HttpServletResponse response, Context ctx) {
        Template tt = null;
        String al = "Please login";
        String st = "danger";
        String ic = "bi bi-exclamation-triangle-fill";
        if ("POST".equals(request.getMethod())) {
            String uu = request.getParameter("username");
            String pp = request.getParameter("password");
            if (uu == null || !uu.equals(USERNAME)) {
                al = "Username '" + uu.split(" ")[0] + "' not found";
            } else if (pp == null || !pp.equals(PASSWORD)) {
                al = "Invalid password";
            } else {
                al = "Login successful :)";
                st = "success";
                ic = "bi bi-check-circle-fill";
            }
        }
        try {
            String ee = URLDecoder.decode(al, StandardCharsets.UTF_8.toString())
                .replaceAll("\\$\\w+", "")
                .replaceAll("\\#\\w+", "")
                .replaceAll("!", "")
                .replaceAll("\"", "&quot;");

            String ct = templateString
                .replace("[ERROR]", "#[["+ee+"]]#")
                .replace("[STATUS]", "#[["+st+"]]#")
                .replace("[ICON]", "#[["+ic+"]]#");
            RuntimeServices rs = RuntimeSingleton.getRuntimeServices();
            SimpleNode sn = rs.parse(ct, "login");

            tt = new Template();
            tt.setRuntimeServices(rs);
            tt.setData(sn);
            tt.initDocument();
        } catch (Exception e) { }
        return tt;
    }
}
